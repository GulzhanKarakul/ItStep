  Контроллер турнира
======================
Запускается из командной строки:

> ./controller


Программа должна:

[ДЕЙСТВИЯ ПРИ ЗАПУСКЕ]
1) Прочитать конфиг;
2) Подключиться к базе данных;
3) Выбрать из таблицы 'Matches' все записи, где 'status' == "playing" и заменить его на "sheduled", а также обновить им timestamp в поле 'modified';

[ОСНОВНОЙ ЦИКЛ]
1) Выбирать из таблицы 'Matches' по одной записи, где 'status' == "sheduled" и запускать игру (состояние ИГРА);
2) Если такие записи закончились, перейти в состояние ПЛАНИРОВАНИЕ МАТЧЕЙ

[ПЛАНИРОВАНИЕ МАТЧЕЙ]
1) Выбрать из таблицы 'Tournament' все записи - поля user_id и rank (рейтинг).
2) Составить список пар игроков для проведения матчей по следующим правилам:
    а) соперники подбираются случайно;
    б) разница в рейтинге между соперниками должна быть не более N (задаётся в конфиге, default=10).
3) Список пар должен сохраняться в таблице 'Matches' с полями 'player1_id', 'player2_id', 'status', 'modified', 'winner_id', 'player1_score', 'player2_score';
    а) поле 'status' = "sheduled";
    б) поле 'modified' = текущий timestamp;
    в) поля 'winner_id', 'player1_score', 'player2_score', 'video_url' = null
4) Перейти в состояние ОСНОВНОЙ ЦИКЛ

[ИГРА]
Для выбранной пары игроков (строка из таблицы 'Matches'):
1) По id игроков извлечь их имена из таблицы 'Users';
2) По id каждого игрока выбрать из таблицы 'Code' записи, в которых 'verified' == "Ок", и из них выбрать одну, в которой "version" максимальное;
3) В выбранной записи важны два поля:
 - 'filename' -> путь к файлу zip, который нужно распаковать, создав для этого временный каталог,
 - 'lang' -> название языка, на котором написан код игрока: нужно запустить код соответствующей языку командой (напр.: node, python, cmake + make и тд)
4) После того как код обоих игроков запущен, запустить третий процесс: игру, передав ей в качестве аргументов имена игроков;
5) Модифицировать поля 'status' = "playing" и 'modified' = текущий timestamp в таблице 'Matches' для текущей записи
6) Перед завершением, игра выводит в консоль результаты игры в формате json: счёт, имя победителя, путь к файлу с записью матча, - извлечь эти данные;
7) Перенести видеофайл в файловое хранилище;
7) Модифицировать поля 'status' = "done", 'modified' = текущий timestamp, а также 'video_url', 'winner_id', 'player1_score' и 'player2_score' в таблице 'Matches' для текущей записи;
8) Найти в таблице 'Tournament' записи этих игроков, пересчитать им 'rank' и 'matches_played' увеличить на 1;
9) Перейти в состояние ОСНОВНОЙ ЦИКЛ


В конфигурационном файле должны быть все настраиваемые параметры:
 - Уровень логирования;
 - Путь, по которому создаётся временный каталог;
 - Команда для запуска для каждого поддерживаемого языка программирования;
 - Настройки доступа к БД: хост, порт, параметры авторизации;
 - Другие параметры по необходимости.
Формат конфиурационного файла - ini или json.





